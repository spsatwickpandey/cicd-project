version: '3.8'

services:
  api:
    build:
      context: .
      target: development
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  api-test:
    build:
      context: .
      target: development
    environment:
      - NODE_ENV=test
      - PORT=3000
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run test:ci
    profiles:
      - test

  api-lint:
    build:
      context: .
      target: development
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run lint
    profiles:
      - lint

  api-format:
    build:
      context: .
      target: development
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run format
    profiles:
      - format

  # Future services for database, redis, etc.
  # postgres:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: cicd_api_dev
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: password
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: unless-stopped

  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   restart: unless-stopped

volumes:
  postgres_data: 